<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotel.data.order.OrderMapper">

    <select id="getAllOrders" resultMap="Order">
        select * from OrderList
    </select>
    <select id="getHotelOrders" resultMap="Order">
        select * from OrderList where hotelId=#{hotelId}
    </select>
    <select id="getUserOrders" resultMap="Order">
        select * from OrderList where userId=#{userId}
    </select>
    <insert id="addOrder" parameterType="com.example.hotel.po.Order" useGeneratedKeys="true" keyProperty="id">
        insert into OrderList(userId,hotelId,hotelName,checkInDate,checkOutDate,roomType,roomId,roomNum,peopleNum,haveChild,createDate,price,clientName,phoneNumber,orderState)
        values(#{userId},#{hotelId},#{hotelName},#{checkInDate},#{checkOutDate},#{roomType},#{roomId},#{roomNum},#{peopleNum},#{haveChild},#{createDate},#{price},#{clientName},#{phoneNumber},#{orderState})
    </insert>
    <select id="getOrderById" resultMap="Order">
        select * from OrderList where id=#{orderId}
    </select>

   <!--取消订单的数据库操作-->
    <!--personal   一开始觉得是delete 后来想想可能是 update-->
    <!--
    <delete id="annulOrder">
        delete from OrderList where id=#{orderid}
    </delete>
    -->
    <update id="annulOrder">
        update OrderList set orderState='已撤销',cancellationDate=#{cancellationDate}
         where id=#{orderId}
    </update>

    <select id="getRoomOrders" resultMap="Order">
        select * from OrderList where roomId=#{roomId}
    </select>

    <!--update the state after the costumers check in -->
    <update id="updateState">
        update OrderList set orderState=#{state}
        where id=#{orderId}
    </update>

    <!--update the check in and check out time-->
    <update id="updateCheckInTime">
        update OrderList set checkInTime=#{updateTime}
        where id=#{orderId}
    </update>
    <update id="updateCheckOutTime">
        update OrderList set checkOutTime=#{updateTime}
        where id=#{orderId}
    </update>

    <update id="updateErrorTime">
        update OrderList set errorDate=#{updateTime}
        where id=#{orderId}
    </update>


    <select id="getAllOrderHotelId" resultType="int">
        select distinct hotelId from OrderList where userId=#{userId}
    </select>

    <select id="getNormalOrderHotelId" resultType="int">
        select distinct hotelId from OrderList where userId=#{userId} and orderState!='异常订单' and orderState!='已撤销'
    </select>

    <select id="getErrorOrderHotelId" resultType="int">
        select distinct hotelId from OrderList where userId=#{userId} and orderState='异常订单'
    </select>

    <select id="getCancelOrderHotelId" resultType="int">
        select distinct hotelId from OrderList where userId=#{userId} and orderState='已撤销'
    </select>

    <resultMap id="Order" type="com.example.hotel.po.Order">
    </resultMap>
</mapper>
